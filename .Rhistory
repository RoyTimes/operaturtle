# The x coordinates are flipped in the data set thus we flip them around.
data.victim.x <- select(data.in, contains("x")) %>%
select(contains("victim")) %>%
gather(Player, victim_x, deaths_0_victim_position_x:deaths_9_victim_position_x) %>%
mutate(victim_x = 1000 - victim_x / 800000 * 1000)
data.victim.y <- select(data.in, contains("y")) %>%
select(contains("victim")) %>%
gather(Player, victim_y, deaths_0_victim_position_y:deaths_9_victim_position_y) %>%
mutate(victim_y = victim_y / 800000 * 1000)
# Storing Killer position Data.
data.killer.x <-  select(data.in, contains("x")) %>%
select(contains("killer")) %>%
gather(Player, killer_x, deaths_0_killer_position_x:deaths_9_killer_position_x) %>%
mutate(killer_x = 1000 - killer_x / 800000 * 1000)
data.killer.y <- select(data.in, contains("y")) %>%
select(contains("killer")) %>%
gather(Player, killer_y, deaths_0_killer_position_y:deaths_9_killer_position_y) %>%
mutate(killer_y = killer_y / 800000 * 1000)
# Storing Time Data in seconds
data.time <- select(data.in, contains("time")) %>%
gather(Player, time, deaths_0_time_event:deaths_9_time_event) %>%
mutate(time = ceiling(time / 60))
# Storing weapon used.
data.weapon <- select(data.in, contains("description")) %>%
gather(Player, weapon, deaths_0_description:deaths_9_description)
data.weapon$type <- ifelse(data.weapon$weapon %in% grepl('AWM|M24|Kar98k|Win94|MK14|SLR|SKS|Mini 14|VSS', data.weapon$weapon), "Sniper & DMR",
ifelse(data.weapon$weapon %in% grepl('Groza|AKM|DP-28|M249|AUG|M16A4|M416|Scar-L', data.weapon$weapon), "AR & LMG",
ifelse(data.weapon$weapon %in% grepl('Tommy Gun|UMP|Vector|UZI', data.weapon$weapon), "SMG",
ifelse(data.weapon$weapon %in% grepl('S686|S1897|S12k', data.weapon$weapon), "Shotgun",
ifelse(data.weapon$weapon %in% grepl('Sawed-off|R1895|R45|P1911|P92|P18C', data.weapon$weapon), "Pistol",
ifelse(data.weapon$weapon %in% grepl('Crossbow|Pan|Machete|Crowbar|Sickle|Superman Punch|Punch', data.weapon$weapon), "Melee / Other",
ifelse(data.weapon$weapon %in% grepl('PickupTruck|Buggy|HitbyCar|Motorbike|Boat|Motorbike(SideCar)|Dacia|death.BP_PickupTruck_B_01_C|death.BP_Van_A_03_C|Uaz', data.weapon$weapon), "Vehicle",
ifelse(data.weapon$weapon %in% grepl('death.ProjMolotov_DamageField_C|Grenade|death.Buff_FireDOT_C|"death.ProjMolotov_C', data.weapon$weapon), "Area Damage",
ifelse(data.weapon$weapon %in% grepl('DownandOut|Drown|RedZone|death.RedZoneBomb_C|Bluezone|Falling', data.weapon$weapon), "Environmnent",
"NA")))))))))
library(dplyr)
library(tidyr)
library(ggplot2)
library(jpeg)
library(data.table)
library(devtools)
#devtools::install_github("dgrtwo/gganimate")
library("gganimate")
#install.packages("magick")
library(magick)
library(grid)
#setwd("~/INFO 201/FINAL/operaturtle")
data.in <- read.csv("data/f_miramar.csv")
data.in <- filter(data.in, map_id == "MIRAMAR")
img <- readJPEG("data/miramar.jpg")
data.players <- data.frame("Player" = paste0("Player: ", c(0:99)))
# The x coordinates are flipped in the data set thus we flip them around.
data.victim.x <- select(data.in, contains("x")) %>%
select(contains("victim")) %>%
gather(Player, victim_x, deaths_0_victim_position_x:deaths_9_victim_position_x) %>%
mutate(victim_x = 1000 - victim_x / 800000 * 1000)
data.victim.y <- select(data.in, contains("y")) %>%
select(contains("victim")) %>%
gather(Player, victim_y, deaths_0_victim_position_y:deaths_9_victim_position_y) %>%
mutate(victim_y = victim_y / 800000 * 1000)
# Storing Killer position Data.
data.killer.x <-  select(data.in, contains("x")) %>%
select(contains("killer")) %>%
gather(Player, killer_x, deaths_0_killer_position_x:deaths_9_killer_position_x) %>%
mutate(killer_x = 1000 - killer_x / 800000 * 1000)
data.killer.y <- select(data.in, contains("y")) %>%
select(contains("killer")) %>%
gather(Player, killer_y, deaths_0_killer_position_y:deaths_9_killer_position_y) %>%
mutate(killer_y = killer_y / 800000 * 1000)
# Storing Time Data in seconds
data.time <- select(data.in, contains("time")) %>%
gather(Player, time, deaths_0_time_event:deaths_9_time_event) %>%
mutate(time = ceiling(time / 60))
# Storing weapon used.
data.weapon <- select(data.in, contains("description")) %>%
gather(Player, weapon, deaths_0_description:deaths_9_description)
data.weapon$type[data.weapon$weapon %in% c('AWM','M24','Kar98k','Win94','Mk14','SLR','SKS','Mini14','VSS')] <- "Sniper & DMR"
data.weapon$type[data.weapon$weapon %in% c('Groza','AKM','DP-28','M249','AUG','M16A4','M416','SCAR-L')] <- "AR & LMG"
data.weapon$type[data.weapon$weapon %in% c('TommyGun','UMP9','Vector','UZI', 'MicroUZI')] <- "SMG"
data.weapon$type[data.weapon$weapon %in% c('S686','S1897','S12K')] <- "Shotgun"
data.weapon$type[data.weapon$weapon %in% c('Sawed-off','R1895','R45','P1911','P92','P18C')] <- "Pistol"
data.weapon$type[data.weapon$weapon %in% c('Crossbow','Pan','Machete','Crowbar','Sickle','Superman Punch','Punch')] <- "Melee / Other"
data.weapon$type[data.weapon$weapon %in% c('PickupTruck','Buggy','HitbyCar','Motorbike','Boat','Motorbike(SideCar)','Dacia','death.BP_PickupTruck_B_01_C','death.BP_Van_A_03_C','Uaz')] <- "Vehicle"
data.weapon$type[data.weapon$weapon %in% c('death.ProjMolotov_DamageField_C','Grenade','death.Buff_FireDOT_C','death.ProjMolotov_C')] <- "Area Damage"
data.weapon$type[data.weapon$weapon %in% c('DownandOut','Drown','RedZone','death.RedZoneBomb_C','Bluezone','Falling')] <- "Environmnent"
# Combine everything into one data frame.
data.map <- data.frame(data.victim.x, data.victim.y, data.killer.x, data.killer.y, data.time, data.weapon)
# Drop rows which contain column names
data.map <- select(data.map,
time,
victim_x, victim_y,
weapon, type,
killer_x, killer_y)
data.map2 <- na.omit(data.map)
data.map <- mutate(data.map, distance = sqrt(abs((killer_x - victim_x)*(killer_x - victim_x)) +
abs((killer_y - victim_y))*(killer_y - victim_y)))
data.map2 <- na.omit(data.map)
data.map2 <- na.omit(data.map)
gganimate(ggplot(data.map2) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = victim_x, y = victim_y, frame = time, color = time, cumulative = TRUE)) +
scale_color_gradientn(colours = rainbow(5)) +
xlab("X coordinate") +
ylab("Y coordinate") +
ggtitle("Victim Deaths Over Time || Elapsed time in minutes: "), "victim_time_heat.gif")
gganimate(ggplot(data.map2) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = killer_x, y = killer_y, frame = time, color = time, cumulative = TRUE)) +
scale_color_gradientn(colours = rainbow(5)) +
xlab("X coordinate") +
ylab("Y coordinate") +
ggtitle("Killer Deaths Over Time || Elapsed time in minutes: "), "killer_time_heat.gif")
gganimate(ggplot(data.map2) +
geom_point(aes(x = killer_x, y = killer_y, frame = time, color = "blue", alpha = 0.000001, cumulative = TRUE)) +
geom_point(aes(x = victim_x, y = victim_y, frame = time, color = "black", alpha = 0.000001, cumulative = TRUE)) +
theme_void() +
theme(plot.background = element_rect(fill = "black")),
"event_diff.gif")
gganimate(ggplot(data.map2) +
geom_point(aes(x = killer_x, y = killer_y, frame = time, color = "blue", alpha = 0.001, cumulative = TRUE)) +
geom_point(aes(x = victim_x, y = victim_y, frame = time, color = "black", alpha = 0.001, cumulative = TRUE)) +
theme_void() +
theme(plot.background = element_rect(fill = "black")),
"event_diff.gif")
c <- cut(data.map$victim_x, c(1:100))
print(c)
c <- cut(data.map2$victim_x, c(1:100))
print(c)# Heat map of victim/killer's death position is indicated by a point, and color indicates time of death.
View(data.map2)
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0) || (killer_x == 1000 & killer_y == 0))
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0) || (killer_x == 1000 & killer_y == 0) == FALSE)
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0) && (killer_x == 1000 & killer_y == 0) == FALSE)
data.map2 <- na.omit(data.map)
?round
library(dplyr)
library(tidyr)
library(ggplot2)
library(jpeg)
library(data.table)
library(devtools)
#devtools::install_github("dgrtwo/gganimate")
library("gganimate")
#install.packages("magick")
library(magick)
library(grid)
#setwd("~/INFO 201/FINAL/operaturtle")
data.in <- read.csv("data/f_miramar.csv")
data.in <- filter(data.in, map_id == "MIRAMAR")
img <- readJPEG("data/miramar.jpg")
data.players <- data.frame("Player" = paste0("Player: ", c(0:99)))
# The x coordinates are flipped in the data set thus we flip them around.
data.victim.x <- select(data.in, contains("x")) %>%
select(contains("victim")) %>%
gather(Player, victim_x, deaths_0_victim_position_x:deaths_9_victim_position_x) %>%
mutate(victim_x = round(1000 - victim_x / 800000 * 1000))
?round
data.victim.y <- select(data.in, contains("y")) %>%
select(contains("victim")) %>%
gather(Player, victim_y, deaths_0_victim_position_y:deaths_9_victim_position_y) %>%
mutate(victim_y = round(victim_y / 800000 * 1000))
# Storing Killer position Data.
data.killer.x <-  select(data.in, contains("x")) %>%
select(contains("killer")) %>%
gather(Player, killer_x, deaths_0_killer_position_x:deaths_9_killer_position_x) %>%
mutate(killer_x = round(1000 - killer_x / 800000 * 1000))
data.killer.y <- select(data.in, contains("y")) %>%
select(contains("killer")) %>%
gather(Player, killer_y, deaths_0_killer_position_y:deaths_9_killer_position_y) %>%
mutate(killer_y = round(killer_y / 800000 * 1000))
# Storing Time Data in seconds
data.time <- select(data.in, contains("time")) %>%
gather(Player, time, deaths_0_time_event:deaths_9_time_event) %>%
mutate(time = ceiling(time / 60))
# Storing weapon used.
data.weapon <- select(data.in, contains("description")) %>%
gather(Player, weapon, deaths_0_description:deaths_9_description)
data.weapon$type[data.weapon$weapon %in% c('AWM','M24','Kar98k','Win94','Mk14','SLR','SKS','Mini14','VSS')] <- "Sniper & DMR"
data.weapon$type[data.weapon$weapon %in% c('Groza','AKM','DP-28','M249','AUG','M16A4','M416','SCAR-L')] <- "AR & LMG"
data.weapon$type[data.weapon$weapon %in% c('TommyGun','UMP9','Vector','UZI', 'MicroUZI')] <- "SMG"
data.weapon$type[data.weapon$weapon %in% c('S686','S1897','S12K')] <- "Shotgun"
data.weapon$type[data.weapon$weapon %in% c('Sawed-off','R1895','R45','P1911','P92','P18C')] <- "Pistol"
data.weapon$type[data.weapon$weapon %in% c('Crossbow','Pan','Machete','Crowbar','Sickle','Superman Punch','Punch')] <- "Melee / Other"
data.weapon$type[data.weapon$weapon %in% c('PickupTruck','Buggy','HitbyCar','Motorbike','Boat','Motorbike(SideCar)','Dacia','death.BP_PickupTruck_B_01_C','death.BP_Van_A_03_C','Uaz')] <- "Vehicle"
data.weapon$type[data.weapon$weapon %in% c('death.ProjMolotov_DamageField_C','Grenade','death.Buff_FireDOT_C','death.ProjMolotov_C')] <- "Area Damage"
data.weapon$type[data.weapon$weapon %in% c('DownandOut','Drown','RedZone','death.RedZoneBomb_C','Bluezone','Falling')] <- "Environmnent"
# Combine everything into one data frame.
data.map <- data.frame(data.victim.x, data.victim.y, data.killer.x, data.killer.y, data.time, data.weapon)
# Drop rows which contain column names
data.map <- select(data.map,
time,
victim_x, victim_y,
weapon, type,
killer_x, killer_y)
data.map <- mutate(data.map, distance = sqrt(abs((killer_x - victim_x)*(killer_x - victim_x)) +
abs((killer_y - victim_y))*(killer_y - victim_y)))
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0) && (killer_x == 1000 & killer_y == 0) == FALSE)
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, -(victim_x == 1000 & victim_y == 0) || (killer_x == 1000 & killer_y == 0))
data.map2 <- filter(data.map2, -(victim_x == 1000 & victim_y == 0) || (killer_x == 1000 & killer_y == 0))
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0) || (killer_x == 1000 & killer_y == 0))
data.map2 <- filter(data.map2, victim_x == 1000 & victim_y == 0)
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, victim_x == 1000 & victim_y == 0)
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0))
data.map2 <- filter(data.map2, -(victim_x == 1000 & victim_y == 0))
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0))
data.map2 <- filter(data.map2, (victim_x == 1000 & victim_y == 0))
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0))
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) && !(killer_x == 1000 & killer_y == 0))
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) )
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) )
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) )
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) && !(killer_x == 1000 & killer_y == 0))
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0) && !(killer_x == 1000 & killer_y == 0))
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0)) %>%
filter(!(killer_x == 1000 & killer_y == 0))
?seq
c <- cut(data.map2$victim_x, seq(from=1, to=1000, by=10)
c <- cut(data.map2$victim_x, seq(from=1, to=1000, by=10))
c <- cut(data.map2$victim_x, seq(1, 1000, 10))
print(c)
data.map2$v_x_bin <- cut(data.map2$victim_x, seq(1, 1000, 10))
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0)) %>%
filter(!(killer_x == 1000 & killer_y == 0))
data.bins <- select(data.map2, victim_x, victim_y, killer_x, killer_y)
data.map2 <- na.omit(data.map)
data.map2 <- filter(data.map2, !(victim_x == 1000 & victim_y == 0)) %>%
filter(!(killer_x == 1000 & killer_y == 0))
data.bins <- select(data.map2, victim_x, victim_y, killer_x, killer_y)
data.bins$v_x <- cut(data.map2$victim_x, seq(1, 1000, 10))
data.bins$v_y <- cut(data.map2$victim_y, seq(1, 1000, 10))
data.bins$k_x <- cut(data.map2$killer_x, seq(1, 1000, 10))
data.bins$k_y <- cut(data.map2$killer_y, seq(1, 1000, 10))
View(data.bins)
summary(data.bins)
info <- group_by(data$bins, v_x, v_y) %>%
summarize()
info <- group_by(data$bins, v_x, v_y)
info <- data$bins %>%
group_by(v_x, v_y)
info <- data.bins %>%
group_by(v_x, v_y)
info <- data.bins %>%
group_by(v_x, v_y) %>%
summarize
info <- data.bins %>%
group_by(v_x, v_y) %>%
summarize()
View(info)
info <- data.bins %>%
group_by(v_x, v_y) %>%
arrange(nrow(v_x, v_y))
info <- data.bins %>%
group_by(v_x, v_y) %>%
arrange(nrow(v_x))
View(data.map2)
data.bins <- null
data.bins <- NULL
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/20)
View(data.bins)
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/20)
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/20)
data.bins$victim_y = ceiling(data.bins$victim_y/20)
data.bins$killer_x = ceiling(data.bins$killer_x/20)
data.bins$killer_y = ceiling(data.bins$killer_y/20)
data.bins.v <- select(data_bins, victim_x, victim_y)
data.bins.v <- select(data.bins, victim_x, victim_y)
data.bins.k <- select(data.bins, killer_x, killer_y)
View(data.bins.k)
?spread
data.bins.v <- spread(victim_x, victim_y)
data.bins.v <- spread(data.bins.v, victim_x, victim_y)
data.bins.v %>%
group_by(victim_x, victim_y) %>%
summarize(Count = n())
data.bins.v <- select(data.bins, victim_x, victim_y) %>%
group_by(victim_x, victim_y) %>%
summarize(count = n())
View(data.bins.v)
data.bins.k <- select(data.bins, killer_x, killer_y) %>%
group_by(killer_x, killer_y) %>%
summarize(count = n())
View(data.bins.k)
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(victim_x, victim_y) %>%
summarize(count = n())
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/20)
data.bins$victim_y = ceiling(data.bins$victim_y/20)
data.bins$killer_x = ceiling(data.bins$killer_x/20)
data.bins$killer_y = ceiling(data.bins$killer_y/20)
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(victim_x, victim_y) %>%
summarize(count = n())
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(x, y) %>%
summarize(count = n())
View(data.bins.v)
data.bins.k <- select(data.bins, x = killer_x, y = killer_y) %>%
group_by(x, y) %>%
summarize(count = n())
data.bins.diff <- merge(data.bins.k, data.bins.v, by = c("x", "y"))
View(data.bins.diff)
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/20)
data.bins$victim_y = ceiling(data.bins$victim_y/20)
data.bins$killer_x = ceiling(data.bins$killer_x/20)
data.bins$killer_y = ceiling(data.bins$killer_y/20)
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(x, y) %>%
summarize(count_v = n())
data.bins.k <- select(data.bins, x = killer_x, y = killer_y) %>%
group_by(x, y) %>%
summarize(count_k = n())
data.bins.diff <- merge(data.bins.k, data.bins.v, by = c("x", "y"))
data.bins.diff <- mutate(data.bins.diff, positive_kill_bin = count_k - count_v)
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/10)
data.bins$victim_y = ceiling(data.bins$victim_y/10)
data.bins$killer_x = ceiling(data.bins$killer_x/10)
data.bins$killer_y = ceiling(data.bins$killer_y/10)
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(x, y) %>%
summarize(count_v = n())
data.bins.k <- select(data.bins, x = killer_x, y = killer_y) %>%
group_by(x, y) %>%
summarize(count_k = n())
data.bins.diff <- merge(data.bins.k, data.bins.v, by = c("x", "y"))
data.bins.diff <- mutate(data.bins.diff, positive_kill_bin = count_k - count_v)
data.bins.diff <- mutate(data.bins.diff, kill_pos = count_k - count_v)
ggplot(data.bins.diff) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
scale_color_gradientn(colours = rainbow(5)) +
xlab("X coordinate") +
ylab("Y coordinate")
data.bins.good <- filter(data.bins.diff, kill_pos > 1)
ggplot(data.bins.diff) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
scale_color_brewer(palette = "Reds") +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.diff) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.pos) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.good) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
xlab("X coordinate") +
ylab("Y coordinate")
gganimate(ggplot(data.map2) +
geom_point(aes(x = victim_x, y = victim_y, frame = time, color = time, cumulative = TRUE)) +
scale_color_gradientn(colours = rainbow(5)) +
xlab("X coordinate") +
ylab("Y coordinate") +
ggtitle("Victim Deaths Over Time || Elapsed time in minutes: "), "victim_time_heat.gif")
ggplot(data.bins.good) +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.good)
ggplot(data.bins.good) +
geom_point(aes(x = x, y = y, color = kill_pos, cumulative = TRUE)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.good) +
geom_point(aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate")
data.bins.good <- filter(data.bins.diff, kill_pos > 5)
data.bins.bad <- filter(data.bins.diff, kill_pos < 5)
ggplot(data.bins.bad) +
geom_point(aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate")
summarize(data.bins.diff)
View(data.bins.diff)
summarize(data.bins.diff$kill_pos)
data.bins.diff %>% group_by(kill_pos) %>% summarize(count = n())
data.bins.good <- filter(data.bins.diff, kill_pos > 3)
data.bins.bad <- filter(data.bins.diff, kill_pos < -3)
ggplot(data.bins.good) +
geom_point(aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot(data.bins.bad) +
geom_point(aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate")
?merge
data.bins.diff <- merge(data.bins.k, data.bins.v, by = c("x", "y"), all = TRUE)
data.bins <- data.map2
data.bins$victim_x = ceiling(data.bins$victim_x/10)
data.bins$victim_y = ceiling(data.bins$victim_y/10)
data.bins$killer_x = ceiling(data.bins$killer_x/10)
data.bins$killer_y = ceiling(data.bins$killer_y/10)
data.bins.v <- select(data.bins, x = victim_x, y = victim_y) %>%
group_by(x, y) %>%
summarize(count_v = n())
data.bins.k <- select(data.bins, x = killer_x, y = killer_y) %>%
group_by(x, y) %>%
summarize(count_k = n())
data.bins.diff <- merge(data.bins.k, data.bins.v, by = c("x", "y"), all = TRUE)
data.bins.diff <- mutate(data.bins.diff, kill_pos = count_k - count_v)
data.bins.diff %>% group_by(kill_pos) %>% summarize(count = n())
data.bins.good <- filter(data.bins.diff, kill_pos > 3)
data.bins.diff$count_k[is.na(data.bins.diff$count_k)] <- 0
data.bins.diff$count_v[is.na(data.bins.diff$count_v)] <- 0
data.bins.diff <- mutate(data.bins.diff, kill_pos = count_k - count_v)
data.bins.diff %>% group_by(kill_pos) %>% summarize(count = n())
ggplot() +
geom_point(data.bins.good, aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data.bins.bad, aes(x = x, y = y, color = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot() +
geom_point(data.bins.good, aes(x = x, y = y, color = "blue")) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data.bins.bad, aes(x = x, y = y, color = "red")) +
xlab("X coordinate") +
ylab("Y coordinate")
ggplot() +
geom_point(data = data.bins.good, aes(x = x, y = y, color = "blue")) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data = data.bins.bad, aes(x = x, y = y, color = "red"))
ggplot() +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(data = data.bins.good, aes(x = x, y = y, color = "blue")) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data = data.bins.bad, aes(x = x, y = y, color = "red"))
?rasterGrob
ggplot() +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(data = data.bins.good, aes(x = x, y = y, color = "blue", size = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data = data.bins.bad, aes(x = x, y = y, color = "red", size = -kill_pos))
ggplot() +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(data = data.bins.good, aes(x = x, y = y, color = "blue", size = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data = data.bins.bad, aes(x = x, y = y, color = "red", size = -kill_pos)) +
expand_limits(x = 0, y = 0)
data.bins.good <- filter(data.bins.diff, kill_pos > 4)
data.bins.bad <- filter(data.bins.diff, kill_pos < -4)
ggplot() +
annotation_custom(rasterGrob(img,
width = unit(1,"npc"),
height = unit(1,"npc")),
-Inf, Inf, -Inf, Inf) +
geom_point(data = data.bins.good, aes(x = x, y = y, color = "blue", size = kill_pos)) +
xlab("X coordinate") +
ylab("Y coordinate") +
geom_point(data = data.bins.bad, aes(x = x, y = y, color = "red", size = -kill_pos)) +
expand_limits(x = 0, y = 0)
